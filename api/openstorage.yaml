swagger: '2.0'
info:
  title: Open Storage for Containers
  description: Open storage API specification
  version: 1.0.0
host: localhost
schemes:
  - https
produces:
  - application/json
paths:
  /cluster/versions/:
    get:
      summary: List of versions
      tags:
        - Clusters
      responses:
        '200':
          description: An array of version strings
          schema:
            type: array
            items:
              type: string
          examples:
            application/json: |-
              [
               "v1"
               ]
  /v1/cluster/enumerate/:
    get:
      summary: Retrieve cluster information
      description: |
        Returns information on the cluster
      tags:
        - Clusters
      responses:
        '200':
          description: The cluster details
          schema:
            $ref: '#/definitions/Cluster'
          examples:
              application/json: |-
                {
                  "Status": 2,
                  "Id": "DB_CLUSTER",
                  "NodeId": "76964eac-c21d-44a0-a78a-ca5f99a2e43e",
                  "Nodes": [
                    {
                      "Id": "76964eac-c21d-44a0-a78a-ca5f99a2e43e",
                      "Cpu": 17.480719794344473,
                      "MemTotal": 4143230976,
                      "MemUsed": 1727221760,
                      "MemFree": 2416009216,
                      "Avgload": 0,
                      "Status": 2,
                      "GenNumber": 1491349542598326500,
                      "Disks": null,
                      "Pools": null,
                      "MgmtIp": "192.168.1.130",
                      "DataIp": "192.168.1.130",
                      "Timestamp": "2017-04-05T01:50:33.235099493Z",
                      "StartTime": "2017-04-04T23:45:42.598875077Z",
                      "Hostname": "elise",
                      "NodeData": {
                        "STORAGE-INFO": {
                          "Resources": {
                            "0:1": {
                              "id": "1",
                              "path": "/dev/sdb",
                              "online": true,
                              "seq_write": 58547000,
                              "size": 2147483648,
                              "used": 239861760,
                              "rotation_speed": "Unknown",
                              "last_scan": {
                                "seconds": 1491349561,
                                "nanos": 7911589
                              }
                            }
                          },
                          "ResourcesLastScan": "Resources Scan OK",
                          "ResourcesCount": 1,
                          "ResourceUUID": "",
                          "ResourcesMd": null,
                          "ResourcesMdLastScan": "",
                          "ResourcesMdCount": 0,
                          "ResourceMdUUID": "",
                          "ReadThroughput": 0,
                          "WriteThroughput": 0,
                          "Random4KIops": 0,
                          "Status": "Up",
                          "TotalSize": 2147483648,
                          "Used": 0,
                          "LastError": ""
                        },
                        "STORAGE-RUNTIME": {
                          "MID": "76964eac-c21d-44a0-a78a-ca5f99a2e43e",
                          "Usage": {
                            "TotalAllocated": 622770258
                          },
                          "PoolUsage": {
                            "0": {
                              "TotalAllocated": 622770258
                            }
                          }
                        },
                        "storage_stats": {
                          "PendingIo": 0,
                          "Cpu": 10.103626943005182,
                          "Memory": 41,
                          "DiskTotal": 2147483648,
                          "DiskAvail": 1524713390,
                          "DiskUtil": 622770258
                        }
                      },
                    }
                  ]
                }
  /v1/cluster/status/:
    get:
      summary: Retrieve cluster status
      description: |
        Returns cluster status
      tags:
        - Clusters
      responses:
        '200':
          description: Cluster status
          schema:
              $ref: '#/definitions/Status'
          examples:
              application/json: |-
                2
  /v1/cluster/nodestatus/:
    get:
      summary: Retrieve nodestatus status
      description: |
        Returns current node status
      tags:
        - Clusters
      responses:
        '200':
          description: Node Status
          schema:
              $ref: '#/definitions/Status'
          examples:
              application/json: |-
                2
  /v1/cluster/inspect/{uuid}/:
    get:
      summary: Retrieve cluster node stats
      description: |
        Returns stats for the specified node
        **Example:** ```/v1/cluster/inspect/76964eac-c21d-44a0-a78a-ca5f99a2e43e/```
      parameters:
        - name: uuid
          in: path
          description: Node UUID
          required: true
          type: string
          format: uuid
      tags:
        - Clusters
      responses:
        '200':
          description: Stats
          schema:
            type: array
            items:
              $ref: '#/definitions/StatPoint'
          examples:
             application/json: |-
              {
                "Avgload": 0,
                "Cpu": 9.23076923076923,
                "DataIp": "192.168.1.130",
                "Disks": null,
                "GenNumber": 1491349542598326500,
                "Hostname": "osboxes",
                "Id": "76964eac-c21d-44a0-a78a-ca5f99a2e43e",
                "MemFree": 848941056,
                "MemTotal": 4143230976,
                "MemUsed": 3294289920,
                "MgmtIp": "192.168.1.130",
                "NodeData": {
                  "STORAGE-INFO": {
                    "LastError": "",
                    "Random4KIops": 0,
                    "ReadThroughput": 0,
                    "ResourceMdUUID": "",
                    "ResourceUUID": "",
                    "Resources": {
                      "0:1": {
                        "id": "1",
                        "last_scan": {
                          "nanos": 7911589,
                          "seconds": 1491349561
                        },
                        "online": true,
                        "path": "/dev/sdb",
                        "rotation_speed": "Unknown",
                        "seq_write": 58547000,
                        "size": 2147483648,
                        "used": 239861760
                      }
                    },
                    "ResourcesCount": 1,
                    "ResourcesLastScan": "Resources Scan OK",
                    "ResourcesMd": null,
                    "ResourcesMdCount": 0,
                    "ResourcesMdLastScan": "",
                    "Status": "Up",
                    "TotalSize": 2147483648,
                    "Used": 0,
                    "WriteThroughput": 0
                  },
                  "STORAGE-RUNTIME": {
                    "MID": "76964eac-c21d-44a0-a78a-ca5f99a2e43e",
                    "PoolUsage": {
                      "0": {
                        "TotalAllocated": 622770258
                      }
                    },
                    "Usage": {
                      "TotalAllocated": 622770258
                    }
                  },
                  "storage_stats": {
                    "Cpu": 23.93617021276596,
                    "DiskAvail": 1524713390,
                    "DiskTotal": 2147483648,
                    "DiskUtil": 622770258,
                    "Memory": 79,
                    "PendingIo": 0
                  }
                },
                "Pools": null,
                "StartTime": "2017-04-04T23:45:42.598875077Z",
                "Status": 2,
                "Timestamp": "2017-04-05T17:50:35.662759754Z"
              }
  /v1/cluster/{uuid}/:
    delete:
      summary: Delete node
      description: |
        Removes a node from the cluster
        **Example:** ```/v1/cluster/76964eac-c21d-44a0-a78a-ca5f99a2e43e/```
      parameters:
        - name: uuid
          in: path
          description: Node UUID
          required: true
          type: string
          format: uuid
      responses:
        '202':
          description: Accepted
      tags:
        - Clusters

  /v1/cluster/alerts/{resource}/:
    get:
      summary: Get alerts
      description: |
        Get All Alerts for the specified resourcetype
      parameters:
        - name: resource
          in: path
          description: Resource Type
          required: true
          type: number
      responses:
        '200':
          description: An array of Alerts
          schema:
            type: array
            items:
              $ref: '#/definitions/Alert'
          examples:
              application/json: |-
                [
                  {
                    "id":20,
                    "severity":3,
                    "alert_type":53,
                    "message":"PX is ready on Node: eac52a92-9f7d-4805-b8f7-15b4be527fe6. CLI accessible at /opt/pwx/bin/pxctl.",
                    "timestamp":{
                      "seconds":1502216714,
                      "nanos":240372421
                    },
                    "resource_id":"paul",
                    "resource":2,
                    "ttl":43200
                  },
                  {
                    "id":21,
                    "severity":3,
                    "alert_type":37,
                    "message":"Volume (Name: test, Id: 900395599316487542) created successfully.",
                    "timestamp":{
                      "seconds":1502216801,
                      "nanos":432777931
                    },
                    "resource_id":"900395599316487542",
                    "resource":1,
                    "ttl":43200
                  }
                ]
      tags:
        - Clusters
  /v1/cluster/alerts/{resource}/{id}/:
    put:
      summary: Clear an alert
      description: |
        Clear specified alert
      parameters:
      - name: resource
        in: path
        description: Resource Type
        required: true
        type: number
      - name: id
        in: path
        description: AlertID
        required: true
        type: number
      responses:
        '202':
          description: Accepted
      tags:
        - Clusters

  /osd-volumes/versions/:
    get:
      summary: List of versions
      tags:
        - Volumes
      responses:
        '200':
          description: An array of version strings
          schema:
            type: array
            items:
              type: string
  /v1/osd-volumes/:
    get:
      summary: List of Volumes
      description: |
        Returns information on provisioned volumes <br>
        **By Name:** <br>
        ```/v1/osd-volumes?Name='mysqlvolume'``` <br>

        **By ID:**  <br>
        ```/v1/osd-volumes?VolumeID='233712969767354295'``` <br>

        ** Labels ** <br>
        Labels require the parameters to be url-encoded

        **By Label:** <br>
        ```/v1/osd-volumes?Label={"dc":"us-west","department=engineering"}``` <br>
        EX: curl -G -v "http://<host>/v1/osd-volumes" --data-urlencode 'Label={"dc":"us-west","department:engineering"}' <br>
        
        **By ConfigLabel:** <br>
        ```/v1/osd-volumes?ConfigLabel={"format":"ext4","cos":"low"}``` <br>
        EX: curl -G -v "http://<host>/v1/osd-volumes" --data-urlencode 'ConfigLabel={"format":"ext4","cos:low"}' <br>

      parameters:
        - name: Name
          in: query
          description: |
            User specified volume name (Case Sensitive)
          required: false
          type: string
        - name: Label
          in: query
          description: |
            Comma separated name value pairs
          required: false
          type: array
          items:
            type: string
        - name: ConfigLabel
          in: query
          description: |
            Comma separated name value pairs
          required: false
          type: array
          items:
            type: string
        - name: VolumeID
          in: query
          description: |
            Volume UUID
          required: false
          type: string
          format: uuid
      tags:
        - Volumes
      responses:
        '200':
          description: An array of Volumes
          schema:
            type: array
            items:
              $ref: '#/definitions/Volume'
          examples:
              application/json: |-
                [
                  {
                    "id": "186672328357254033",
                    "readonly": false,
                    "locator": {
                      "name": "cassandra-vol"
                    },
                    "ctime": "2017-03-31T19:06:58Z",
                    "spec": {
                      "ephemeral": false,
                      "size": "1073741824",
                      "format": "ext4",
                      "block_size": "32768",
                      "ha_level": "1",
                      "cos": "low",
                      "io_profile": "sequential",
                      "dedupe": false,
                      "snapshot_interval": 0,
                      "shared": false,
                      "replica_set": {},
                      "aggregation_level": 1,
                      "encrypted": false,
                      "passphrase": "",
                      "snapshot_schedule": "",
                      "scale": 1,
                      "sticky": false,
                      "max_backups": 0,
                      "backup_schedule": ""
                    },
                    "usage": "33964032",
                    "last_scan": "2017-03-31T19:06:58Z",
                    "format": "ext4",
                    "status": "up",
                    "state": "attached",
                    "attached_on": "e612618a-3c8f-490d-b288-674089de7254",
                    "device_path": "e612618a-3c8f-490d-b288-674089de7254",
                    "replica_sets": [
                      {
                        "nodes": [
                          "e612618a-3c8f-490d-b288-674089de7254"
                        ]
                      }
                    ],
                    "error": "",
                    "runtime_state": [
                      {
                        "runtime_state": {
                          "FullResyncBlocks": "[{1 0} {-1 0} {-1 0} {-1 0} {-1 0}]",
                          "ID": "0",
                          "ReadQuorum": "1",
                          "ReadSet": "[1]",
                          "ReplicaSetCurr": "[1]",
                          "ReplicaSetNext": "[1]",
                          "ResyncBlocks": "[{1 0} {-1 0} {-1 0} {-1 0} {-1 0}]",
                          "RuntimeState": "clean",
                          "TimestampBlocksPerNode": "[0 0 0 0 0]",
                          "TimestampBlocksTotal": "0",
                          "WriteQuorum": "1",
                          "WriteSet": "[1]"
                        }
                      }
                    ],
                    "secure_device_path": "",
                    "background_processing": true
                  },
                  {
                    "id": "371602944628495728",
                    "readonly": false,
                    "locator": {
                      "name": "mysql-vol"
                    },
                    "ctime": "2017-03-31T19:10:55Z",
                    "spec": {
                      "ephemeral": false,
                      "size": "2147483648",
                      "format": "ext4",
                      "block_size": "32768",
                      "ha_level": "1",
                      "cos": "low",
                      "io_profile": "sequential",
                      "dedupe": false,
                      "snapshot_interval": 0,
                      "shared": false,
                      "replica_set": {},
                      "aggregation_level": 1,
                      "encrypted": false,
                      "passphrase": "",
                      "snapshot_schedule": "",
                      "scale": 1,
                      "sticky": false,
                      "max_backups": 0,
                      "backup_schedule": ""
                    },
                    "usage": "67788800",
                    "last_scan": "2017-03-31T19:10:55Z",
                    "format": "ext4",
                    "status": "up",
                    "state": "attached",
                    "attached_on": "e612618a-3c8f-490d-b288-674089de7254",
                    "device_path": "e612618a-3c8f-490d-b288-674089de7254",
                    "replica_sets": [
                      {
                        "nodes": [
                          "e612618a-3c8f-490d-b288-674089de7254"
                        ]
                      }
                    ],
                    "error": "",
                    "runtime_state": [
                      {
                        "runtime_state": {
                          "FullResyncBlocks": "[{1 0} {-1 0} {-1 0} {-1 0} {-1 0}]",
                          "ID": "0",
                          "ReadQuorum": "1",
                          "ReadSet": "[1]",
                          "ReplicaSetCurr": "[1]",
                          "ReplicaSetNext": "[1]",
                          "ResyncBlocks": "[{1 0} {-1 0} {-1 0} {-1 0} {-1 0}]",
                          "RuntimeState": "clean",
                          "TimestampBlocksPerNode": "[0 0 0 0 0]",
                          "TimestampBlocksTotal": "0",
                          "WriteQuorum": "1",
                          "WriteSet": "[1]"
                        }
                      }
                    ],
                    "secure_device_path": "",
                    "background_processing": true
                  },
                  {
                    "id": "556970537543779086",
                    "readonly": false,
                    "locator": {
                      "name": "mysql_volume"
                    },
                    "ctime": "2017-03-30T02:02:35Z",
                    "spec": {
                      "ephemeral": false,
                      "size": "1073741824",
                      "format": "ext4",
                      "block_size": "65536",
                      "ha_level": "1",
                      "cos": "low",
                      "io_profile": "sequential",
                      "dedupe": false,
                      "snapshot_interval": 0,
                      "shared": false,
                      "aggregation_level": 1,
                      "encrypted": false,
                      "passphrase": "",
                      "snapshot_schedule": "",
                      "scale": 0,
                      "sticky": false,
                      "max_backups": 0,
                      "backup_schedule": ""
                    },
                    "usage": "254148608",
                    "last_scan": "2017-03-30T02:02:35Z",
                    "format": "ext4",
                    "status": "up",
                    "state": "attached",
                    "attached_on": "e612618a-3c8f-490d-b288-674089de7254",
                    "device_path": "/dev/pxd/pxd556970537543779086",
                    "attach_path": [
                      "/var/lib/osd/mounts/mysql_volume"
                    ],
                    "replica_sets": [
                      {
                        "nodes": [
                          "e612618a-3c8f-490d-b288-674089de7254"
                        ]
                      }
                    ],
                    "error": "",
                    "runtime_state": [
                      {
                        "runtime_state": {
                          "FullResyncBlocks": "[{1 0} {-1 0} {-1 0} {-1 0} {-1 0}]",
                          "ID": "0",
                          "ReadQuorum": "1",
                          "ReadSet": "[1]",
                          "ReplicaSetCurr": "[1]",
                          "ReplicaSetNext": "[1]",
                          "ResyncBlocks": "[{1 0} {-1 0} {-1 0} {-1 0} {-1 0}]",
                          "RuntimeState": "clean",
                          "TimestampBlocksPerNode": "[0 0 0 0 0]",
                          "TimestampBlocksTotal": "0",
                          "WriteQuorum": "1",
                          "WriteSet": "[1]"
                        }
                      }
                    ],
                    "secure_device_path": "",
                    "background_processing": false
                  }
                ]
    post:
        summary: Create New Volume
        description: Create new volume according to spec
        parameters:
          - name: spec
            in: body
            description: |
             Volume create path example:
             POST /v1/osd-volumes
             valid "format" types : 0 (unformatted block device), 2 (ext4) and 6(xfs)
              Volume spec example:
              ``` json
                  {
                    "locator": {
                      "name": "cassandra-vol",
                      "volume_labels": {
                        "SLA": "Gold"
                      }
                    },
                    "spec": {
                      "ephemeral": false,
                      "size": 2147483648,
                      "format": 2,
                      "block_size": 32768,
                      "ha_level": 1,
                      "cos": 1,
                      "io_priority": "medium",
                      "dedupe": false,
                      "snapshot_interval": 0,
                      "shared": false,
                      "replica_set": {}
                    }
                  }
              ```
            required: true
            schema:
              $ref: '#/definitions/VolumeCreateRequest'
        tags:
          - Volumes
        responses:
          '200':
            description: |
             UUID of newly created volume.
             On failures, a detailed error message will be available as below
            schema:
              $ref: '#/definitions/VolumeCreateResponse'
            examples:
             application/json: |-
              {
                 "id": "713030761715548077",
                 "volume_response": {}
                }
  /v1/osd-volumes/{uuid}/:
    get:
      summary: Inspect volume
      description: |
        Retrieves volume as specified by UUID
        **Example:** ```/v1/osd-volumes/713030761715548077/```
      parameters:
        - name: uuid
          in: path
          description: Volume UUID or Name
          required: true
          type: string
          format: uuid
      tags:
        - Volumes
      responses:
        '200':
          description: Volume
          schema:
            $ref: '#/definitions/Volume'
          examples:
             application/json: |-
              {
                    "id": "960911126757490171",
                    "readonly": false,
                    "locator": {
                     "name": "cassandra-vol"
                    },
                    "ctime": "2017-03-31T18:27:23Z",
                    "spec": {
                     "ephemeral": false,
                     "size": "10737418240",
                     "format": "ext4",
                     "block_size": "32768",
                     "ha_level": "1",
                     "cos": "low",
                     "io_profile": "sequential",
                     "dedupe": false,
                     "snapshot_interval": 0,
                     "shared": false,
                     "replica_set": {

                     },
                     "aggregation_level": 1,
                     "encrypted": false,
                     "passphrase": "",
                     "snapshot_schedule": "",
                     "scale": 1,
                     "sticky": false,
                     "max_backups": 0,
                     "backup_schedule": ""
                    },
                    "usage": "138682368",
                    "last_scan": "2017-03-31T18:27:23Z",
                    "format": "ext4",
                    "status": "up",
                    "state": "detached",
                    "attached_on": "",
                    "device_path": "",
                    "replica_sets": [
                     {
                      "nodes": [
                       "456b5368-f8b4-40c7-aa85-ea35e4b515a4"
                      ]
                     }
                    ],
                    "error": "",
                    "runtime_state": [
                     {
                      "runtime_state": {
                       "FullResyncBlocks": "[{0 0} {-1 0} {-1 0} {-1 0} {-1 0}]",
                       "ID": "0",
                       "ReadQuorum": "1",
                       "ReadSet": "[0]",
                       "ReplicaSetCurr": "[0]",
                       "ReplicaSetNext": "[0]",
                       "ResyncBlocks": "[{0 0} {-1 0} {-1 0} {-1 0} {-1 0}]",
                       "RuntimeState": "clean",
                       "TimestampBlocksPerNode": "[0 0 0 0 0]",
                       "TimestampBlocksTotal": "0",
                       "WriteQuorum": "1",
                       "WriteSet": "[0]"
                      }
                     }
                    ],
                    "secure_device_path": "",
                    "background_processing": true
                    }
    put:
        summary: Change volume state
        description: |
          Attach, detach, format, mount and unmount operations. Can also be used to update size, sticky and shared properties.
        parameters:
          - name: uuid
            in: path
            description: |
             Volume UUID or name as path parameter example:
             PUT /v1/osd-volumes/cassandra-vol
            required: true
            type: string
            format: uuid
          - name: state
            in: body
            description: |
              Desired Volume State attach example:
               ``` json
                   {
                     "action": {
                        "attach": 2
                        }
                   }
              ```
              Desired Volume State detach example:
               ``` json
                   {
                     "action": {
                        "attach": 1
                        }
                   }
              ```
              Desired Volume State mount example:
               ``` json
                   {
                     "action": {
                        "mount": 2,
                        "mount_path":"/tmp"
                        }
                   }
              ```
              Desired Volume State unmount example:
               ``` json
                   {
                     "action": {
                        "mount": 1,
                        "mount_path":"/tmp"
                        }
                   }
              ```
              Desired Volume Size update example (max_backups, snapshot_interval are set to max values to avoid update):
               ``` json
                   {
                     "spec": {
                        "size": 10737418240,
                        "max_backups": 4294967295,
                        "snapshot_interval": 4294967295
                        }
                   }
              ```
              Desired Volume Shared update example (max_backups, snapshot_interval are set to max values to avoid update):
               ``` json
                   {
                     "spec": {
                        "shared": true,
                        "max_backups": 4294967295,
                        "snapshot_interval": 4294967295
                        }
                   }
              ```
              Desired Volume Sticky update example (max_backups, snapshot_interval are set to max values to avoid update):
               ``` json
                   {
                     "spec": {
                        "sticky": true,
                        "max_backups": 4294967295,
                        "snapshot_interval": 4294967295
                        }
                   }
              ```
              Desired Volume HA-Level update example (max_backups, snapshot_interval are set to max values to avoid update and an empty replicaset to regenerate the set):
               ``` json
                   {
                     "spec": {
                        "ha_level": 3,
                        "max_backups": 4294967295,
                        "snapshot_interval": 4294967295,
                        "replica_set":{}
                        }
                   }
              ```
              Desired Volume Scale update example (max_backups, snapshot_interval are set to max values to avoid update):
               ``` json
                   {
                     "spec": {
                        "scale": 3,
                        "max_backups": 4294967295,
                        "snapshot_interval": 4294967295
                        }
                   }
              ```
              Desired Volume Label reset example (Warning: labels are reset, name is required):
               ``` json
                   {
                     "locator": {
                        "name": "vol_name",
                        "volume_labels":{"label1":"label1_value"}
                     }
                   }
              ```
            required: true
            schema:
              $ref: '#/definitions/VolumeStateParams'
        tags:
          - Volumes
        responses:
          '200':
            description: |
             Operation result of Attach/Detach/Mount/Unmount
            schema:
              $ref: '#/definitions/VolumeStateParams'
            examples:
             application/json: |-
                {
                  "volume": {
                    "id": "567662444761523200",
                    "locator": {
                      "name": "cassandra-vol"
                    },
                    "ctime": {
                      "seconds": 1491195375,
                      "nanos": 503891611
                    },
                    "spec": {
                      "size": 1073741824,
                      "format": 2,
                      "block_size": 32768,
                      "ha_level": 1,
                      "cos": 1,
                      "replica_set": {},
                      "aggregation_level": 1,
                      "scale": 1
                    },
                    "usage": 33964032,
                    "last_scan": {
                      "seconds": 1491195375,
                      "nanos": 503891948
                    },
                    "format": 2,
                    "status": 2,
                    "state": 3,
                    "attached_on": "e612618a-3c8f-490d-b288-674089de7254",
                    "device_path": "/dev/pxd/pxd567662444761523200",
                    "attach_path": [
                      "/tmp"
                    ],
                    "replica_sets": [
                      {
                        "nodes": [
                          "e612618a-3c8f-490d-b288-674089de7254"
                        ]
                      }
                    ],
                    "runtime_state": [
                      {
                        "runtime_state": {
                          "FullResyncBlocks": "[{1 0} {-1 0} {-1 0} {-1 0} {-1 0}]",
                          "ID": "0",
                          "ReadQuorum": "1",
                          "ReadSet": "[1]",
                          "ReplicaSetCurr": "[1]",
                          "ReplicaSetNext": "[1]",
                          "ResyncBlocks": "[{1 0} {-1 0} {-1 0} {-1 0} {-1 0}]",
                          "RuntimeState": "clean",
                          "TimestampBlocksPerNode": "[0 0 0 0 0]",
                          "TimestampBlocksTotal": "0",
                          "WriteQuorum": "1",
                          "WriteSet": "[1]"
                        }
                      }
                    ]
                  }
                }
    delete:
        summary: Delete Volume
        description: |
          Delete Volume
        parameters:
          - name: uuid
            in: path
            description: |
             Volume UUID as path parameter example:
             DELETE /v1/osd-volumes/myvolume
            required: true
            type: string
            format: uuid
        tags:
          - Volumes
        responses:
          '200':
            description: Volume Deleted
            schema:
              $ref: '#/definitions/UUID'
  /v1/osd-volumes/stats/{uuid}/:
    get:
      summary: Retrieve Volume Stats
      description: |
        Retrieve Volume Stats for specified UUID
        **Example:** ```/v1/osd-volumes/stats/567662444761523200/```
      parameters:
        - name: uuid
          in: path
          description: Volume UUID
          required: true
          type: string
          format: uuid
      tags:
        - Volumes
      responses:
        '200':
          description: Volume stats
          schema:
            $ref: '#/definitions/VolumeStats'
  /v1/osd-volumes/usedsize/{uuid}/:
    get:
      summary: Retrieve volume used disk size
      description: |
        Retrieve volume used space size for specified UUID
        **Example:** ```/v1/osd-volumes/usedsize/567662444761523200/```
      parameters:
        - name: uuid
          in: path
          description: Volume UUID
          required: true
          type: string
          format: uuid
      tags:
        - Volumes
      responses:
        '200':
          description: Volume used space
          schema:
            type: number
  /v1/osd-volumes/requests/{uuid}/:
    get:
      summary: Retrieve Volume Requests
      description: |
        Retrieve Volume Requests for specified UUID
        **Example:** ```/v1/osd-volumes/requests/567662444761523200/```
      parameters:
        - name: uuid
          in: path
          description: Volume UUID
          required: true
          type: string
          format: uuid
      tags:
        - Volumes
      responses:
        '200':
          description: Volume Requests
          schema:
            $ref: '#/definitions/VolumeActiveRequests'
  /v1/osd-snapshot/:
    get:
      summary: List of snapshots
      description: |
        Returns information on snapshots <br>
        **By Name:** <br>
        ```/v1/osd-snapshots?name='mysqlsnapshot'```  <br>

        **By VolumeLabels:**  <br>
        ```/v1/osd-snapshots?VolumeLabels='{{"dc"="us-west"},{"department=engineering"}}'``` <br>

        **By SnapLabels:** <br>
        ```/v1/osd-snapshots?SnapLabels='{{"format"="ext4"},{"cos"="low"}}'``` <br>

        **By UUID:**  <br>
        ```/v1/osd-snapshots?uuid='233712969767354295'``` <br>

        **Any combination of the above**
      parameters:
        - name: name
          in: query
          description: Volume name that maps to this snap
          required: false
          type: string
        - name: VolumeLabels
          in: query
          description: Comma separated volume labels
          required: false
          type: array
          items:
            type: string
        - name: SnapLabels
          in: query
          description: Comma separated snap labels
          required: false
          type: array
          items:
            type: string
        - name: uuid
          in: query
          description: Snap UUID
          required: false
          type: string
          format: uuid
      tags:
        - Volumes
      responses:
        '200':
          description: An array of VolumeSnaps
          schema:
            type: array
            items:
              $ref: '#/definitions/VolumeSnap'
          examples:
             application/json: |-
                [
                  {
                    "id": "6160761704448908",
                    "source": {
                      "parent": "556970537543779086",
                      "seed": ""
                    },
                    "readonly": false,
                    "locator": {
                      "name": "556970537543779086.snap2017-03-31T23:30:45.368202632Z"
                    },
                    "ctime": "2017-03-31T23:30:45Z",
                    "spec": {
                      "ephemeral": false,
                      "size": "1073741824",
                      "format": "ext4",
                      "block_size": "65536",
                      "ha_level": "1",
                      "cos": "low",
                      "io_profile": "sequential",
                      "dedupe": false,
                      "snapshot_interval": 0,
                      "shared": false,
                      "aggregation_level": 1,
                      "encrypted": false,
                      "passphrase": "",
                      "snapshot_schedule": "",
                      "scale": 0,
                      "sticky": false,
                      "max_backups": 0,
                      "backup_schedule": ""
                    },
                    "usage": "254148608",
                    "last_scan": "2017-03-31T23:30:45Z",
                    "format": "ext4",
                    "status": "up",
                    "state": "detached",
                    "attached_on": "",
                    "device_path": "",
                    "replica_sets": [
                      {
                        "nodes": [
                          "e612618a-3c8f-490d-b288-674089de7254"
                        ]
                      }
                    ],
                    "error": "",
                    "secure_device_path": "",
                    "background_processing": false
                  }
                ]
    post:
        summary: Create New Snapshot
        description: Create new volume according to spec
        parameters:
          - name: snapParams
            in: body
            description: |
              Snapshot Params example:
               ``` json
                   {
                     "id":"cassandra-vol",
                     "locator":
                              {"name":"dbsnap"},
                      "readonly":true
                   }
              ```
            required: true
            schema:
              $ref: '#/definitions/SnapCreateParams'
        tags:
          - Volumes
        responses:
          '200':
            description: UUID of newly created snapshot
            schema:
              $ref: '#/definitions/UUID'
            examples:
             application/json: |-
                {
                  "volume_create_response": {
                    "id": "376740775858546908",
                    "volume_response": {}
                  }
                }
definitions:
  VolumeResponse:
    properties:
      Error:
        type: string
        description: Error text
  VolumeCreateRequest:
    properties:
      locator:
        $ref: '#/definitions/Locator'
      spec:
        $ref: '#/definitions/VolumeSpec'
      options:
        $ref: '#/definitions/CreateOptions'
  VolumeCreateResponse:
    properties:
      Id:
        type: string
        format: uuuid
      VolumeResponse:
        $ref: '#/definitions/VolumeResponse'
  Volume:
    properties:
      uuid:
        type: string
        format: uuid
        description: unique volume UUID
      locator:
        $ref: '#/definitions/Locator'
      ctime:
        type: string
        description: Creation time
      spec:
        $ref: '#/definitions/VolumeSpec'
      status:
        type: string
        description: Volume op status
        enum:
          - NotPresent
          - Up
          - Down
          - Degraded
      state:
        type: number
        description: >-
          Volume state. 1 -> CreatePending, 2->Available, 4->Attached,
          8->Detached, 16->ErrorState, 32->Deleted
      format:
        type: string
        description: Filesystem for this volume
        enum:
          - xfs
          - ext4
          - zfs
          - none
      usage:
        type: number
        format: int64
        description: Physical blocks used on this volume
      scan_time:
        type: string
        description: Last time this volume was scanned for data integrity
      attached_on:
        type: string
        description: Node on which volume is attached
      replica_set:
        type: array
        items:
          type: string
        description: List of nodes where data is erasure coded
      device_path:
        type: string
        description: Attach path for block devices
      mount_path:
        type: array
        items:
          type: string
        description: Paths at which the volumes is mounted
      error:
        type: string
        description: Last error on this volume
  VolumeSpec:
    properties:
      ephemeral:
        type: boolean
        description: True for ephemeral disks
      size:
        type: number
        format: int64
        description: Maximum size
      blocksize:
        type: number
        format: int32
        description: Desired fs block size
      halevel:
        type: number
        description: >-
          A number specifying the number of nodes that are allowed to fail and
          data be still available
      cos:
        type: number
        minimum: 1
        maximum: 10
        description: A number between 1 and 10 that specified a class of service
      dedupe:
        type: boolean
        description: Enable or disable deduplication
      snapshot_interval:
        type: number
        description: >-
          A number in minutes specifying how oftene snapshots should be taken. 0
          disables snapshots
      snapshot_depth:
        type: number
        description: Number of snapshots to keep
      config_labels:
        type: array
        items:
          $ref: '#/definitions/NameValuePair'
        description: Arbitrary name value configuration pairs
  CreateOptions:
    properties:
      fail_if_exists:
        type: boolean
        description: Fail if volume with matching locator exists
      create_from_snap:
        type: string
        format: uuid
        description: create volume from specified snapshot
  Locator:
    properties:
      name:
        type: string
        description: user assigned name
      labels:
        type: string
        description: comma seperated name value pairs
  VolumeStateParams:
    properties:
      mount:
        type: integer
        format: int32
        description: '2 to mount, 1 to unmount'
      format:
        type: integer
        format: int32
        description: 1 to format
      attach:
        type: integer
        format: int32
        description: '2 to attach, 1 to detach'
      mountpath:
        type: string
        description: Path to mount the device
  UUID:
    properties:
      name:
        type: string
        description: Volume UUID
        format: uuid
  NameValuePair:
    properties:
      name:
        type: string
        description: Name
      value:
        type: string
        description: Value
  VolumeStats:
    properties:
      stats:
        type: array
        items:
          $ref: '#/definitions/NameValuePair'
        description: Stats name and value array
  Alert:
    properties:
      id:
        type: integer
        format: int64
        description: Alert ID
      severity:
        type: integer
        format: int32
        description: |
          '1->Alarms, 2->Warnings, 3->Notifications'
      alertType:
        type: integer
        format: int32
        description: ''
      message:
        type: string
        description: 'Alert message'
      timestamp:
        type: object
        properties:
          seconds:
            type: integer
            format: int32
          nanos:
            type: integer
            format: int32
        description: 'Time alert was raised'
      resource_id:
        type: string
        description: 'identifier for the resource'
      resource:
        type: integer
        format: int32
        description: |
          '1->volume, 2->node, 3->cluster, 4->drivee'
      cleared:
        type: boolean
        description: 'Indicates if alert has been cleared'
      ttl:
        type: integer
        format: uint64
        description: 'Time to live in seconds for this alert'
      unique_tag:
        type: string
        format: uuid
        description: 'Unique tag to identify alert for a given resource'
  VolumeSnap:
    properties:
      uuid:
        type: string
        format: uuid
        description: Unique snap UUID
      volume_uuid:
        type: string
        format: uuid
        description: Volume UUID that maps to this snapshot
      ctime:
        type: string
        description: Creation time
      usage:
        type: number
        format: int64
        description: Physical blocks used for this snap
      snap_labels:
        type: array
        items:
          $ref: '#/definitions/NameValuePair'
        description: Arbitrary name value pairs
  SnapCreateParams:
    properties:
      uuid:
        type: string
        format: uuid
        description: UUID of volume to snap
      labels:
        type: array
        items:
          $ref: '#/definitions/NameValuePair'
        description: Arbitrary name value pairs
  ActiveRequest:
    properties:
      requestKV:
        type: array
        items:
          $ref: '#/definitions/NameValuePair'
  VolumeActiveRequests:
    properties:
      RequestCount:
        type: number
        format: int64
        description: Number of active requests
      ActiveRequest:
        type: array
        items:
          $ref: '#/definitions/ActiveRequest'
  StoragePool:
    properties:
      ID:
        type: string
        format: uuid
      Cos:
        type: number
        format: int
      Medium:
        type: number
        format: int
      RaidLevel:
        type: string
      TotalSize:
        type: number
        format: uint64
      Used:
        type: number
        format: uint64
  Node:
    properties:
      Id:
        type: string
        format: uuid
      Cpu:
        type: number
        format: float64
      MemTotal:
        type: number
        format: uint64
      MemUsed:
        type: number
        format: uint64
      MemFree:
        type: number
        format: uint64
      AvgLoad:
        type: number
        format: int
      GenNumber:
        type: number
        format: uint64
      Status:
        type: string
        enum:
          - STATUS_NONE
          - STATUS_INIT
          - STATUS_OK
          - STATUS_OFFLINE
          - STATUS_ERROR
          - STATUS_NOT_IN_QUORUM
          - STATUS_DECOMMISSION
          - STATUS_MAINTENANCE
          - STATUS_STORAGE_DOWN
          - STATUS_STORAGE_DEGRADED
          - STATUS_NEEDS_REBOOT
          - STATUS_STORAGE_REBALANCE
          - STATUS_STORAGE_DRIVE_REPLACE
          - STATUS_MAX
      Disks:
        type: array
        items:
          type: string
      Pools:
        type: array
        items:
          $ref: '#/definitions/StoragePool'
      MgmtIp:
        type: string
        format: uuid
      DataIp:
        type: string
        format: uuid
      Timestamp:
        type: string
      StartTime:
        type: string
      Hostname:
        type: string
      NodeData:
        type: array
        items:
          $ref: '#/definitions/NameValuePair'
      NodeLabels:
        type: array
        items:
          $ref: '#/definitions/NameValuePair'
  Status:
    type: string
    enum:
      - STATUS_NONE
      - STATUS_INIT
      - STATUS_OK
      - STATUS_OFFLINE
      - STATUS_ERROR
      - STATUS_NOT_IN_QUORUM
      - STATUS_DECOMMISSION
      - STATUS_MAINTENANCE
      - STATUS_STORAGE_DOWN
      - STATUS_STORAGE_DEGRADED
      - STATUS_NEEDS_REBOOT
      - STATUS_STORAGE_REBALANCE
      - STATUS_STORAGE_DRIVE_REPLACE
      - STATUS_MAX
  Cluster:
    properties:
      Id:
        type: string
        format: uuid
      Status:
        type: string
        enum:
          - STATUS_NONE
          - STATUS_INIT
          - STATUS_OK
          - STATUS_OFFLINE
          - STATUS_ERROR
          - STATUS_NOT_IN_QUORUM
          - STATUS_DECOMMISSION
          - STATUS_MAINTENANCE
          - STATUS_STORAGE_DOWN
          - STATUS_STORAGE_DEGRADED
          - STATUS_NEEDS_REBOOT
          - STATUS_STORAGE_REBALANCE
          - STATUS_STORAGE_DRIVE_REPLACE
          - STATUS_MAX
      NodeId:
        type: string
        format: uuid
      Nodes:
        type: array
        items:
          $ref: '#/definitions/Node'
